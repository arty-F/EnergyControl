// <auto-generated />
using System;
using EnergyControl.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EnergyControl.Infrastructure.Migrations
{
    [DbContext(typeof(EnergyControlContext))]
    [Migration("20221007121031_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EnergyControl.Domain.Entities.ConsumptionObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubsidiaryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubsidiaryId");

                    b.ToTable("ConsumptionObjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "DefaultAddress",
                            Name = "FirstConsumptionObject",
                            SubsidiaryId = 1
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ElectricalEnergyMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ElectricalEnergyMeters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "FirstElectricalEnergyMeterNumber",
                            Type = 0,
                            VerificationDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Number = "SecondElectricalEnergyMetersNumber",
                            Type = 1,
                            VerificationDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ElectricityMeasuringPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsumptionObjectId")
                        .HasColumnType("int");

                    b.Property<int>("ElectricalEnergyMeterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PowerTransformerId")
                        .HasColumnType("int");

                    b.Property<int?>("SettlementMeterId")
                        .HasColumnType("int");

                    b.Property<int>("VoltageTransformerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionObjectId");

                    b.HasIndex("ElectricalEnergyMeterId")
                        .IsUnique();

                    b.HasIndex("PowerTransformerId")
                        .IsUnique();

                    b.HasIndex("SettlementMeterId");

                    b.HasIndex("VoltageTransformerId")
                        .IsUnique();

                    b.ToTable("ElectricityMeasuringPoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumptionObjectId = 1,
                            ElectricalEnergyMeterId = 1,
                            Name = "FirstElectricityMeasuringPoint",
                            PowerTransformerId = 1,
                            SettlementMeterId = 1,
                            VoltageTransformerId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConsumptionObjectId = 1,
                            ElectricalEnergyMeterId = 2,
                            Name = "SecondElectricityMeasuringPoint",
                            PowerTransformerId = 2,
                            SettlementMeterId = 2,
                            VoltageTransformerId = 2
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ElectricitySupplyPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConsumptionObjectId")
                        .HasColumnType("int");

                    b.Property<float>("MaxPower")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SettlementMeterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionObjectId");

                    b.HasIndex("SettlementMeterId");

                    b.ToTable("ElectricitySupplyPoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumptionObjectId = 1,
                            MaxPower = 100f,
                            Name = "FirstElectricitySupplyPoint",
                            SettlementMeterId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConsumptionObjectId = 1,
                            MaxPower = 200f,
                            Name = "SecondElectricitySupplyPoint",
                            SettlementMeterId = 2
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "DefaultAddress",
                            Name = "FirstOrganization"
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.PowerTransformer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TransformationRatio")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PowerTransformers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "FirstPowerTransformerNumber",
                            TransformationRatio = 1.5f,
                            Type = 0,
                            VerificationDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Number = "SecondPowerTransformerNumber",
                            TransformationRatio = 2.5f,
                            Type = 1,
                            VerificationDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.SettlementMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SettlementMeters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2017, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2017, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2018, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2018, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.Subsidiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Subsidiaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "DefaultAddress",
                            Name = "FirstSubsidiary",
                            OrganizationId = 1
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.VoltageTransformer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TransformationRatio")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VoltageTransformers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "FirstVoltageTransformerNumber",
                            TransformationRatio = 0.5f,
                            Type = 2,
                            VerificationDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Number = "SecondVoltageTransformerNumber",
                            TransformationRatio = 0.75f,
                            Type = 0,
                            VerificationDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ConsumptionObject", b =>
                {
                    b.HasOne("EnergyControl.Domain.Entities.Subsidiary", "Subsidiary")
                        .WithMany()
                        .HasForeignKey("SubsidiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subsidiary");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ElectricityMeasuringPoint", b =>
                {
                    b.HasOne("EnergyControl.Domain.Entities.ConsumptionObject", "ConsumptionObject")
                        .WithMany("ElectricityMeasuringPoints")
                        .HasForeignKey("ConsumptionObjectId");

                    b.HasOne("EnergyControl.Domain.Entities.ElectricalEnergyMeter", "ElectricalEnergyMeter")
                        .WithOne("ElectricityMeasuringPoint")
                        .HasForeignKey("EnergyControl.Domain.Entities.ElectricityMeasuringPoint", "ElectricalEnergyMeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnergyControl.Domain.Entities.PowerTransformer", "PowerTransformer")
                        .WithOne("ElectricityMeasuringPoint")
                        .HasForeignKey("EnergyControl.Domain.Entities.ElectricityMeasuringPoint", "PowerTransformerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnergyControl.Domain.Entities.SettlementMeter", "SettlementMeter")
                        .WithMany("ElectricityMeasuringPoints")
                        .HasForeignKey("SettlementMeterId");

                    b.HasOne("EnergyControl.Domain.Entities.VoltageTransformer", "VoltageTransformer")
                        .WithOne("ElectricityMeasuringPoint")
                        .HasForeignKey("EnergyControl.Domain.Entities.ElectricityMeasuringPoint", "VoltageTransformerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsumptionObject");

                    b.Navigation("ElectricalEnergyMeter");

                    b.Navigation("PowerTransformer");

                    b.Navigation("SettlementMeter");

                    b.Navigation("VoltageTransformer");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ElectricitySupplyPoint", b =>
                {
                    b.HasOne("EnergyControl.Domain.Entities.ConsumptionObject", "ConsumptionObject")
                        .WithMany("ElectricitySupplyPoints")
                        .HasForeignKey("ConsumptionObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnergyControl.Domain.Entities.SettlementMeter", "SettlementMeter")
                        .WithMany("ElectricitySupplyPoints")
                        .HasForeignKey("SettlementMeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsumptionObject");

                    b.Navigation("SettlementMeter");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.Subsidiary", b =>
                {
                    b.HasOne("EnergyControl.Domain.Entities.Organization", "Organization")
                        .WithMany("Subsidiaries")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ConsumptionObject", b =>
                {
                    b.Navigation("ElectricityMeasuringPoints");

                    b.Navigation("ElectricitySupplyPoints");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.ElectricalEnergyMeter", b =>
                {
                    b.Navigation("ElectricityMeasuringPoint")
                        .IsRequired();
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.Organization", b =>
                {
                    b.Navigation("Subsidiaries");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.PowerTransformer", b =>
                {
                    b.Navigation("ElectricityMeasuringPoint")
                        .IsRequired();
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.SettlementMeter", b =>
                {
                    b.Navigation("ElectricityMeasuringPoints");

                    b.Navigation("ElectricitySupplyPoints");
                });

            modelBuilder.Entity("EnergyControl.Domain.Entities.VoltageTransformer", b =>
                {
                    b.Navigation("ElectricityMeasuringPoint")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
